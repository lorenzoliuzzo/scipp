/**
 * @file    scipp.hpp
 * @author  Lorenzo Liuzzo (lorenzoliuzzo@outlook.com)
 * @brief   This file includes all the scipp library headers files and its standard dependency. 
 * @date    2023-07-12
 * 
 * @copyright Copyright (c) 2023
 */


#ifndef SCIPP_LIBRARY
#define SCIPP_LIBRARY 1


    /// ===============================================================
    /// @brief std dependencies
    /// ===============================================================

        #include <algorithm>
        #include <array>        /// geometry::vector, geometry::matrix
        #include <complex>      /// math::calculus
        #include <concepts>     /// traits
        #include <chrono>       /// tools::timer
        #include <cmath>        /// math::functions
        #include <execution>    /// math::functions, math::integrals
        #include <fstream>      /// tools::io
        #include <functional>   /// math::calculus
        #include <iostream>     /// tools::io
        #include <map>          /// physics::prefix_map
        #include <memory>       /// math::calculus
        #include <numeric>      /// maybe not needed
        #include <random>       /// math::statistics
        #include <ranges>       /// math::integrals
        #include <ratio>        /// physics::prefix, tools::io
        #include <string>       /// tools::io
        #include <sstream>      /// tools::io
        #include <type_traits>  /// traits
        #include <utility>
        // #include <variant>      
        #include <vector>


        #include "../external/matplotlibcpp.h"
        namespace plt = matplotlibcpp;


    /// ===============================================================
    /// @brief scipp library headers
    /// ===============================================================
        
        /// ---------------------------------------------------------------
        /// @brief scipp traits
        /// ---------------------------------------------------------------

            #include "traits/math.hpp"
            #include "traits/physics.hpp"
            #include "traits/geometry.hpp"


        /// ---------------------------------------------------------------
        /// @brief scipp::tools
        /// ---------------------------------------------------------------

            #include "tools/meta.hpp"
            #include "tools/io.hpp"


        /// ---------------------------------------------------------------
        /// @brief scipp::math::calculus expressions
        /// ---------------------------------------------------------------

            #include "math/calculus/expressions/expression.hpp" 

            #include "math/calculus/expressions/algebraic/negate.hpp"           
            #include "math/calculus/expressions/algebraic/add.hpp"      

            #include "math/calculus/expressions/algebraic/multiply.hpp"         
            #include "math/calculus/expressions/algebraic/invert.hpp"

            #include "math/calculus/expressions/algebraic/power.hpp"
            #include "math/calculus/expressions/algebraic/root.hpp"

            /// ---------------------------------------------------------------

            #include "math/calculus/expressions/mathematical/absolute.hpp"
            #include "math/calculus/expressions/mathematical/exponential.hpp"
            #include "math/calculus/expressions/mathematical/logarithm.hpp"
            
            #include "math/calculus/expressions/mathematical/trigonometric/sine.hpp"
            #include "math/calculus/expressions/mathematical/trigonometric/cosine.hpp"
            #include "math/calculus/expressions/mathematical/trigonometric/tangent.hpp"

            #include "math/calculus/expressions/mathematical/trigonometric/inverse/arcsine.hpp"
            #include "math/calculus/expressions/mathematical/trigonometric/inverse/arccosine.hpp"
            #include "math/calculus/expressions/mathematical/trigonometric/inverse/arctangent.hpp"
            
            #include "math/calculus/expressions/mathematical/trigonometric/hyperbolic/sine.hpp"
            #include "math/calculus/expressions/mathematical/trigonometric/hyperbolic/cosine.hpp"
            #include "math/calculus/expressions/mathematical/trigonometric/hyperbolic/tangent.hpp"

            #include "math/calculus/expressions/mathematical/trigonometric/hyperbolic/inverse/arcsine.hpp"
            #include "math/calculus/expressions/mathematical/trigonometric/hyperbolic/inverse/arccosine.hpp"
            #include "math/calculus/expressions/mathematical/trigonometric/hyperbolic/inverse/arctangent.hpp"

            #include "math/calculus/expressions/mathematical/erf.hpp"

        /// ---------------------------------------------------------------
        /// @brief scipp::math::op functions
        /// ---------------------------------------------------------------

            #include "math/operators.hpp" 

            /// --------------------------------------------------------------- ok

            #include "math/logical/equal.hpp"

            #include "math/logical/greater.hpp"
            #include "math/logical/greater_equal.hpp"

            #include "math/logical/less.hpp"
            #include "math/logical/less_equal.hpp"

            /// --------------------------------------------------------------- ok

            #include "math/algebraic/negate.hpp"           
            #include "math/algebraic/add.hpp" 

            #include "math/algebraic/invert.hpp" 
            #include "math/algebraic/multiply.hpp" 

            #include "math/algebraic/power.hpp" 
            #include "math/algebraic/root.hpp" 

            /// ---------------------------------------------------------------

            #include "math/mathematical/sign.hpp"
            #include "math/mathematical/absolute.hpp"

            #include "math/mathematical/exponential.hpp"
            #include "math/mathematical/logarithm.hpp"

            #include "math/mathematical/trigonometric/sine.hpp"
            #include "math/mathematical/trigonometric/cosine.hpp"
            #include "math/mathematical/trigonometric/tangent.hpp"

            #include "math/mathematical/trigonometric/inverse/arcsine.hpp"
            #include "math/mathematical/trigonometric/inverse/arccosine.hpp"
            #include "math/mathematical/trigonometric/inverse/arctangent.hpp"
            
            #include "math/mathematical/trigonometric/hyperbolic/sine.hpp"
            #include "math/mathematical/trigonometric/hyperbolic/cosine.hpp"
            #include "math/mathematical/trigonometric/hyperbolic/tangent.hpp"

            #include "math/mathematical/trigonometric/hyperbolic/inverse/arcsine.hpp"
            #include "math/mathematical/trigonometric/hyperbolic/inverse/arccosine.hpp"
            #include "math/mathematical/trigonometric/hyperbolic/inverse/arctangent.hpp"

            #include "math/mathematical/erf.hpp"
            // #include "math/mathematical/erfc.hpp"
            // #include "math/mathematical/gamma.hpp"

            /// ---------------------------------------------------------------

            #include "math/numerical/round.hpp"
            #include "math/numerical/floor.hpp"
            #include "math/numerical/ceil.hpp"
            #include "math/numerical/trunc.hpp"
            #include "math/numerical/frac.hpp" // frac is a function that returns the fractional part of a number ie frac(3.14) = 0.14
            #include "math/numerical/mod.hpp"
            #include "math/numerical/min.hpp"
            #include "math/numerical/max.hpp"
            #include "math/numerical/clip.hpp" // clip is a function that takes a value, a minimum and a maximum and returns the value if it is between the minimum and maximum, otherwise it returns the minimum or maximum
            // #include "math/numerical/sum.hpp"
            // #include "math/numerical/mean.hpp"
            // #include "math/numerical/stddev.hpp"
            // #include "math/numerical/var.hpp"
            // #include "math/numerical/median.hpp"
            
            // #include "math/logical/are_close.hpp"


        /// ---------------------------------------------------------------
        /// @brief physics/measurements
        /// ---------------------------------------------------------------
    
            #include "physics/base_quantity.hpp" 
            #include "physics/unit.hpp" 
            #include "physics/measurement.hpp"
            
            #include "physics/base_quantity_types.hpp"
            #include "physics/unit_types.hpp" 
            #include "physics/constants.hpp"


        /// ---------------------------------------------------------------
        /// @brief scipp::math::calculus differentation
        /// ---------------------------------------------------------------
        
            #include "math/calculus/variable.hpp" 
            #include "math/calculus/differentiation/derivatives.hpp"

            #include "math/calculus/function.hpp"


            // #include "math/calculus/ode/solver.hpp"
            // #include "math/calculus/legendre_transformation.hpp"
            // #include "math/calculus/linear_regression.hpp"
            

            // #include "math/mathematical/norm.hpp"

            #include "math/calculus/interval.hpp"
            // #include "math/calculus/curve.hpp"   
            #include "math/calculus/taylor_series.hpp"


        /// ---------------------------------------------------------------
        /// @brief scipp::math::calculus integration
        /// ---------------------------------------------------------------

            #include "math/calculus/integration/curvilinear.hpp"
            // #include "math/calculus/integration/rectangle.hpp"
            // #include "math/calculus/integration/trapezoid.hpp"
            #include "math/calculus/integration/midpoint.hpp"
            // #include "math/calculus/integration/endpoint.hpp"
            #include "math/calculus/integration/simpson.hpp"
            // #include "math/calculus/integration/gauss.hpp"  


            #include "physics/material_point.hpp"
            #include "physics/mechanics/kinetic_energy.hpp"
            #include "physics/mechanics/potential_energy.hpp"
            #include "physics/mechanics/lagrangian.hpp"
            #include "physics/mechanics/hamiltonian.hpp"
            

        /// ---------------------------------------------------------------
        /// @brief geometry/linear_algebra
        /// ---------------------------------------------------------------

            #include "geometry/vector.hpp"
            // #include "geometry/matrix.hpp"

            // #include "physics/vector_types.hpp"
            // #include "physics/matrix_types.hpp" // @todo

            // #include "geometry/vectorial_base.hpp"
        

        /// ---------------------------------------------------------------
        /// @brief math/polynomials
        /// ---------------------------------------------------------------

            // #include "math/polynomials/polynomial.hpp"
            // #include "math/polynomials/ruffini.hpp"
            // #include "math/polynomials/newton_root.hpp"
        //     #include "math/polynomials/roots.hpp"
        //     // #include "math/polynomials/durand_kerner.hpp"

        //     #include "math/polynomials/hermite.hpp"
        //     #include "math/polynomials/legendre.hpp"
        //     #include "math/polynomials/chebyshev.hpp"
        //     // #include "math/polynomials/laguerre.hpp"

        /// ---------------------------------------------------------------

        // //     #include "math/autodiff.hpp"
        // //     #include "math/calculus/derivative.hpp" // @todo


        /// ---------------------------------------------------------------
        /// @brief math/calculus
        /// ---------------------------------------------------------------

            // #include "math/calculus/complex/complex.hpp"
            #include "math/calculus/complex/möbius_map.hpp"
            // #include "math/calculus/curves/interval.hpp"
            // #include "math/calculus/curves/line.hpp"
            // #include "math/calculus/curves/circumference.hpp"
            // #include "math/calculus/curves/ellipse.hpp"
            // #include "math/calculus/curves/sphere.hpp"


        //     #include "math/calculus/hilbert_space.hpp"

        /// ---------------------------------------------------------------

        // // //     // #include "math/equations.hpp"

        /// ---------------------------------------------------------------

        // //     // #include "geometry/linspace.hpp"

        /// ---------------------------------------------------------------

            // #include "math/statistics.hpp"

        /// ---------------------------------------------------------------

        /// ---------------------------------------------------------------
        /// @brief tools
        /// ---------------------------------------------------------------

            #include "tools/timer.hpp"

            #include "tools/plot.hpp"
        //     #include "tools/bench.hpp"

        /// ---------------------------------------------------------------


#endif